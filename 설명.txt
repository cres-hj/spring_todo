6. 클래스는 크게 값을 저장하는 클래스(Value Object)와 처리하는 클래스
- 학생이 100명이면 VO는 100개 필요, 처리하는 클래스는 Singleton
- VO는 스프링빈이 될 수 없음(학생이 어떤 데이터를 갖고있는지 스프링이 어케 알아 사람이 만들어야지)
- 처리하는 클래스(Controller, Service, Repository)는 싱글톤으로 관리
    ! 스프링빈은 싱글톤으로 관리되는구나

7. 스프링은 거대한 한 덩어리의 프레임워크가 아니라 레고 블록을 조립하는 방식 "거대한 하나의 덩어리가 아니라 커스텀이 자유롭게 가능하구나"
- @RequestParam이 사용자가 입력한 문자열 값을 파라미터로 바꿀 때 형식 변환하는 하나하나가 다 클래스다
    String을 int로 바꾸는 클래스, String을 long으로 바꾸는 클래스 ...
  스프링이 제공하지 않는 변환을 원하면 클래스를 만들어서 스프링에 추가하면 된다
        -> ! ☆인터페이스☆가 있을거야. 내가 맘대로 만들면 스프링이 기능을 끼워넣을수가 없으니까
- 스프링은 커스터마이즈 가능한 여러 객체의 조립품
- 우리가 커스터마이즈 할 수 있도록 다양한 인터페이스들을 제공한다

8. HTTP 상태코드
- 200: 성공(서버에서 오류가 발생하지 않았다! 내가 원하는 결과는 아닐수도 있어)
       어쨋든 마지막에는 200이여야해. 에러 났을 때 보여주는 페이지로 연결해서~
        에러 창 그대로 보여주면 고객 다 떠나간다
- 400: 수신거부(ex 사용자가 "aaa"를 보냈는데 int num으로 받는거 -> 수신거부)
- 403: 권한없음
- 404: 주소를 찾을 수 없음
- 405: 잘못된 메소드
- 500: 서버에서 처리 중 오류(수신은 했는데 서버에서 처리중에 오류나는거)
